<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.LocationMapper">
	<resultMap id="BaseResultMap" type="com.example.demo.model.Location">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="uid" jdbcType="INTEGER" property="uid" />
		<result column="lat" jdbcType="DOUBLE" property="lat" />
		<result column="lng" jdbcType="DOUBLE" property="lng" />
		<result column="addr" jdbcType="VARCHAR" property="addr" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, `uid`, lat, lng, addr
	</sql>
	<select id="selectByExample" parameterType="com.example.demo.model.LocationExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from location
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from location
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from location
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.example.demo.model.LocationExample">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from location
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.example.demo.model.Location">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into location (id, `uid`, lat,
		lng, addr)
		values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER},
		#{lat,jdbcType=DOUBLE},
		#{lng,jdbcType=DOUBLE}, #{addr,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.example.demo.model.Location">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into location
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			<if test="uid != null">
				`uid`,
			</if>
			<if test="lat != null">
				lat,
			</if>
			<if test="lng != null">
				lng,
			</if>
			<if test="addr != null">
				addr,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=INTEGER},
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="lat != null">
				#{lat,jdbcType=DOUBLE},
			</if>
			<if test="lng != null">
				#{lng,jdbcType=DOUBLE},
			</if>
			<if test="addr != null">
				#{addr,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.example.demo.model.LocationExample"
		resultType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from location
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update location
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.uid != null">
				`uid` = #{record.uid,jdbcType=INTEGER},
			</if>
			<if test="record.lat != null">
				lat = #{record.lat,jdbcType=DOUBLE},
			</if>
			<if test="record.lng != null">
				lng = #{record.lng,jdbcType=DOUBLE},
			</if>
			<if test="record.addr != null">
				addr = #{record.addr,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update location
		set id = #{record.id,jdbcType=INTEGER},
		`uid` = #{record.uid,jdbcType=INTEGER},
		lat = #{record.lat,jdbcType=DOUBLE},
		lng = #{record.lng,jdbcType=DOUBLE},
		addr = #{record.addr,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Location">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update location
		<set>
			<if test="uid != null">
				`uid` = #{uid,jdbcType=INTEGER},
			</if>
			<if test="lat != null">
				lat = #{lat,jdbcType=DOUBLE},
			</if>
			<if test="lng != null">
				lng = #{lng,jdbcType=DOUBLE},
			</if>
			<if test="addr != null">
				addr = #{addr,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.example.demo.model.Location">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update location
		set `uid` = #{uid,jdbcType=INTEGER},
		lat = #{lat,jdbcType=DOUBLE},
		lng = #{lng,jdbcType=DOUBLE},
		addr = #{addr,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="getLocation" resultType="com.example.demo.pojo.OlderLocation">
		select user.id,user.name,location.lat,location.lng,location.addr from user
		inner join location on user.id=location.uid where
		user.id in (select id from user where bid=#{uid})
	</select>
</mapper>